triplesWithProp :: Int -> ((Int, Int, Int) -> Bool) -> [(Int, Int, Int)]

triplesWithProp n f = filter f [(x,y,z) | x <- [1 .. n] , y <- [x+1 .. n], 
					  z <- [y+1 .. n] ]

--test data

--triplesWithProp 10 (\(x,y,z) -> 4*x+3*y >= z^2
-- result : [(1,2,3),(2,3,4)]
--triplesWithProp 10 (\(x,y,z) -> z `mod` y == x)
-- result : [(1,2,3),(1,2,5),(1,2,7),(1,2,9),(1,3,4),(1,3,7),(1,3,10),(1,4,5),(
--1,4,9),(1,5,6),(1,6,7),(1,7,8),(1,8,9),(1,9,10),(2,3,5),(2,3,8),(2,4,6),(2,4,
--10),(2,5,7),(2,6,8),(2,7,9),(2,8,10),(3,4,7),(3,5,8),(3,6,9),(3,7,10),(4,5,9)
--,(4,6,10)]
